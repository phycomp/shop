# requirements.txt
# streamlit
# psycopg2-binary
# sqlalchemy
# pandas

from streamlit import title, header, columns as stCLMN, error as stError, image as stImage, subheader, write as stWrite, button, session_state, sidebar, success, markdown
import psycopg2
#from sqlalchemy import create_engine
import pandas as pd
from dbUtil import runQuery
from stUtil import rndrCode

Â¶ÇÊÑèDF=runQuery('select * from Â¶ÇÊÑè;', db='ruyi')
rndrCode(Â¶ÇÊÑèDF)
# Ë≥áÊñôÂ∫´ÈÄ£Êé•ÈÖçÁΩÆ
#DB_CONFIG = { 'host': 'localhost', 'database': 'ruyi_shop', 'user': 'your_username', 'password': 'your_password' }

def connect_db():
    try:
        engine = create_engine(f"postgresql://{DB_CONFIG['user']}:{DB_CONFIG['password']}@{DB_CONFIG['host']}/{DB_CONFIG['database']}")
        return engine
    except Exception as e:
        stError(f"Ë≥áÊñôÂ∫´ÈÄ£Êé•ÈåØË™§: {e}")
        return None

def load_products():
  ÂïÜÂìÅ=runQuery('select * from Â¶ÇÊÑè;')
  """
    engine = connect_db()
    if engine:
        query = "SELECT * FROM products"
        return pd.read_sql(query, engine)
  """
  ÂïÜÂìÅDF=DataFrame(ÂïÜÂìÅ, columns=['ÂïÜÂìÅ'])
  return ÂïÜÂìÅDF#pd.DataFrame()
MENU, Ë°®ÂñÆ=[], ['ÂïÜÂüé', 'Ë≥ºÁâ©Ëªä', '']	#, 'ÈåØÁ∂úË§áÈõú', '‰∫åÂçÅÂõõÁØÄÊ∞£'
for ndx, Menu in enumerate(Ë°®ÂñÆ): MENU.append(f'{ndx}{Menu}')
with sidebar:
  menu=stRadio('Ë°®ÂñÆ', MENU, horizontal=True, index=0)
  srch=text_input('ÊêúÂ∞ã', '')
if menu==len(Ë°®ÂñÆ):
  pass
elif menu==MENU[1]:
  tblName='Ë≥ºÁâ©Ëªä'
elif menu==MENU[0]:
  #ÂïÜÂüé ÂïÜÂìÅÂ±ïÁ§∫
  title("Â¶ÇÊÑèÁîüÊäÄÁ¥†ÊñôÂïÜÂüé")
  ÂïÜÂìÅDF = load_products()
  header("ÂïÜÂìÅÂàóË°®")
  Â∑¶, Âè≥ = stCLMN([1, 3])
  for idx, product in ÂïÜÂìÅDF.iterrows():
    with Â∑¶:
        stImage(product['image_url'], width=150)
    with Âè≥:
      subheader(product['name'])
      stWrite(f"ÂÉπÊ†º: ${product['price']}")
      stWrite(product['description'])
      if button(f"Âä†ÂÖ•Ë≥ºÁâ©Ëªä - {product['name']}"):
        session_state[product['name']] = session_state.get(product['name'], 0) + 1

  # Ë≥ºÁâ©Ëªä
  header("üõí Ë≥ºÁâ©Ëªä")
  total_price = 0
  for product_name, quantity in session_state.items():
    if quantity > 0:
      product = products_df[products_df['name'] == product_name].iloc[0]
      item_total = product['price'] * quantity
      total_price += item_total
      with sidebar:
        stWrite(f"{product_name} x {quantity} = ${item_total}")

        markdown(f"**Á∏ΩË®à:** ${total_price}")
        if button("ÁµêÂ∏≥"):
          success("ÊÑüË¨ùÊÇ®ÁöÑË≥ºË≤∑ÔºÅ")

# PostgreSQLÂª∫Ë°®SQL
"""
CREATE TABLE products (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100),
    price DECIMAL(10,2),
    description TEXT,
    image_url TEXT
);

INSERT INTO products (name, price, description, image_url) VALUES
('Á¥†Èõû', 120, 'Á¥îÁ¥†ÈõûËÇâ', 'https://example.com/suji.jpg'),
('Á¥†È≠ö', 150, 'Á¥îÁ¥†È≠öËÇâ', 'https://example.com/suyu.jpg');
"""
